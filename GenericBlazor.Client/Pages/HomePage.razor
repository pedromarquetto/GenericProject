@page "/"
@layout ClientLayout

@attribute [StreamRendering]
@rendermode @(new InteractiveAutoRenderMode(false))

<div class="customContainer" style="margin:0px; width:100%">

    <CustomDiv 
    Visible="true"
    DivType="5"
    Class="divCard1" 
    Style="margin:0px; width:100%">

        <div id="indicators" class="carousel slide" data-ride="carousel" data-interval="1000" >
            <ol class="carousel-indicators">
                @if (_companyManager.CompanyConfig?.CompanyArchives?.Count > 0)
                {
                    <li data-target="#0" data-slide-to="0" class="active"></li>
                    @foreach (var archive in _companyManager.CompanyConfig?.CompanyArchives?.Where(p => p.PresentationSequence != 0))
                    {
                        @if (archive?.Archive != null)
                        {
                            <li data-target="#@archive.PresentationSequence" data-slide-to="@archive.PresentationSequence"></li>
                        }
                    }
                }
            </ol>

            <div class="carousel-inner">
                @if (_companyManager.CompanyConfig?.CompanyArchives?.Count > 0)
                {
                    <div class="carousel-item active"> @* This Shows the first, index 0 *@
                        <img style="max-height:500px; object-fit:cover;" class="d-block w-100"
                        src="@($"data:image/jpeg;base64,{Convert.ToBase64String(_companyManager.CompanyConfig?.CompanyArchives.FirstOrDefault(p => p.PresentationSequence == 0)?.Archive)}")" />
                    </div>
                    @foreach (var archive in _companyManager.CompanyConfig?.CompanyArchives?.Where(p => p.PresentationSequence != 0)?
                      .OrderBy(p => p.PresentationSequence))
                    {
                        <div class="carousel-item">
                            @if (archive?.Archive != null)
                            {
                                <img style="max-height:500px; object-fit:cover;" class="d-block w-100" src="@($"data:image/jpeg;base64,{Convert.ToBase64String(archive?.Archive)}")" />
                            }
                        </div>
                    }
                }
            </div>
            <a class="carousel-control-prev" href="#indicators" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#indicators" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>

    </CustomDiv>


    <CustomDiv 
    Visible="true"
    Class="divCard1">

        <CustomDiv
        Visible="true"
        Class="divCard2">

            <CustomButton OnClickCallback="NavigateToHome"
            ButtonType="ButtonEnum.Blue">
                @* Navigate *@
                @message
            </CustomButton>

        </CustomDiv>

    </CustomDiv>

</div>
@code {

    public IQueryable<Item> items { get; set; }
    public IQueryable<Item> filteredItems { get; set; }
    public string filter { get; set; } = "";

    private SystemScreen screen { get; set; }
    private List<SystemScreenField> fieldsList { get; set; }

    public string message { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        items = filteredItems = await GlobalHelper.GetTableData(_ws, items, "Item");//To change
    }

    public async void NavigateToHome()
    {
        _navig.NavigateTo("/HomeAdmin");
	}
}
